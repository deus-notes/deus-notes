eBPF - современный тренд в мире профайлинга на Линукc.
eBPF - это виртуальная машина, которая может запускать юзерский байт код в различных местах ядра.
Его можно использовать как универсальная утилита трассирования ядра
    eBPF был содан для оптимизации фильтрования сетевых пакетов, если вы запустите tcpdump - то ваши матчеры будут
скомпилированы в BPF bytecode который будет запущен в JIT.
    Неоспоримым плюсом и отличием eBPF от loadable kernel modules состоит в том, что eBPF не может присести к
кернел крашу, поскольку оно будет запускать только безопасный код.
    eBPF программы являются байткодом, который передается в виртуальную машину на выполнение. И виртуальная машина
запустит данный код только в том случае, если он пройдет верификацию.Например, проверку на то, что в коде нет
доступа к невалидной памяти, нет бесконечных циклов и т.п.
    Однако eBPF программы не обязательно писать только на bytecode, создатели предоставили инструмен для написания
eBPF программ на привычной нам С. Дальше llvm превратит наш C код в eBPF объектный файл, который может использоваться
в ядре.
eBPF имеет широкий выбор точек для выполнение. К примеру, программа может быть выполнена на kprobe, uprobe, ftrace_hook,
tracepoints (https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md#events--arguments)


